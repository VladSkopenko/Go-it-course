# Розглянемо завдання на перевірку спаму в електронному листі або фільтрацію заборонених слів у повідомленні.
# Нехай функція is_spam_words приймає рядок (параметр text), перевіряє його на вміст заборонених слів зі списку (параметр spam_words), 
#і повертає результат перевірки: True, якщо є хоч одне слово присутнє зі списку, та False, якщо в тексті стоп-слів не виявлено.
# Слова у параметрі text можуть бути у довільному регістрі, а значить функція is_spam_words, при пошуку заборонених слів, регістру незалежна і весь
# текст має зводитися до нижнього регістру. Для спрощення, будемо вважати, що в рядку є тільки одне заборонене слово.
# Передбачити третій параметр функції space_around, який за замовчуванням дорівнює False. 
#Він відповідатиме за те, що функція шукатиме окреме слово чи ні. Слово вважати, що стоїть окремо, якщо ліворуч від слова знаходиться символ пробілу 
#або воно розташоване на початку тексту, а праворуч від слова знаходиться пробіл або символ крапки.
# Наприклад, у тексті ми шукаємо слово "лох". То в слові "Молох" виклик та результат буде наступним:
# print(is_spam_words("Молох", ["лох"]))  # True
# print(is_spam_words("Молох", ["лох"], True))  # False
# Тобто у другому випадку слово не окреме і є частиною іншого.
# У цьому прикладі функція поверне True в обох випадках.
# print(is_spam_words("Ты лох.", ["лох"]))  # True
# print(is_spam_words("Ты лох.", ["лох"], True))  # True

def is_spam_words(text, spam_words, space_around=False):
    cost = 0
    text = text.lower()
    word_s = []
    new_text =  text.replace(".","")
    word_of_text_in_list = new_text.split()
    for word in spam_words:
        word_s.append(word.lower())
    if space_around:
        for element in word_s:
            if str(element) in text:
                cost += 1
            else:
                cost += 0
            return True if cost >= 1 else False
    else:
        for element in word_s:
            if str(element) in word_of_text_in_list:
                cost += 1 
            else:
                cost += 0
            return True if cost >= 1  else False
                

    
